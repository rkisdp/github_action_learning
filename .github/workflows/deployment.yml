name: Deploy to Amazon ECS
on:
  workflow_dispatch

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create env file
      run: |
          touch .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
          echo DEBUG=${{ secrets.DEBUG }} >> .env
          echo LANGUAGE_CODE=${{ secrets.LANGUAGE_CODE }} >> .env
          echo TIME_ZONE=${{ secrets.TIME_ZONE }} >> .env
          echo USE_I18N=${{ secrets.USE_I18N }} >> .env
          echo USE_L10N=${{ secrets.USE_L10N }} >> .env
          echo USE_TZ=${{ secrets.USE_TZ }} >> .env


    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.MY_AWS_ECR }}
        IMAGE_TAG: ${{ secrets.AWS_IMAGE_TAG }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Download task definition
      id: task-download
      run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.AWS_TASK_FAMILY }} --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.AWS_CONTAINER }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ secrets.AWS_SERVICE }}
        cluster: ${{ secrets.AWS_CLUSTER }}
